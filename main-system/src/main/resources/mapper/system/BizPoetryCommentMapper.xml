<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.main.system.mapper.BizPoetryCommentMapper">

    <resultMap type="BizPoetryComment" id="BizPoetryCommentResult">
        <result property="id"    column="id"    />
        <result property="content"    column="content"    />
        <result property="poetryId"    column="poetry_id"    />
        <result property="userId"    column="user_id"    />
        <result property="favor"    column="favor"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBizPoetryCommentVo">
        select id, content, poetry_id, user_id, favor, create_by, create_time, update_by, update_time from biz_poetry_comment
    </sql>

    <select id="selectBizPoetryCommentList" parameterType="BizPoetryComment" resultMap="BizPoetryCommentResult">
        <include refid="selectBizPoetryCommentVo"/>
        <where>
            <if test="content != null  and content != ''"> and content like concat('%', #{content}, '%')</if>
            <if test="poetryId != null "> and poetry_id = #{poetryId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="favor != null "> and favor = #{favor}</if>
            <if test="createBy != null  and createBy != ''"> and create_by = #{createBy}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
        </where>
    </select>

    <select id="selectBizPoetryCommentById" parameterType="Long" resultMap="BizPoetryCommentResult">
        <include refid="selectBizPoetryCommentVo"/>
        where id = #{id}
    </select>

    <select id="selectBizPoetryCommentListByPoetryIds" parameterType="List" resultMap="BizPoetryCommentResult">
        <include refid="selectBizPoetryCommentVo"/>
        where poetry_id in
        <foreach collection="list" item="poetryId" open="(" separator="," close=")">
            #{poetryId}
        </foreach>
    </select>

    <insert id="insertBizPoetryComment" parameterType="BizPoetryComment" useGeneratedKeys="true" keyProperty="id">
        insert into biz_poetry_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">content,</if>
            <if test="poetryId != null">poetry_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="favor != null">favor,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">#{content},</if>
            <if test="poetryId != null">#{poetryId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="favor != null">#{favor},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBizPoetryComment" parameterType="BizPoetryComment">
        update biz_poetry_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="poetryId != null">poetry_id = #{poetryId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="favor != null">favor = #{favor},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBizPoetryCommentById" parameterType="Long">
        delete from biz_poetry_comment where id = #{id}
    </delete>

    <delete id="deleteBizPoetryCommentByIds" parameterType="String">
        delete from biz_poetry_comment where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
